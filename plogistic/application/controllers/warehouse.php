<?if (!DEFINED('BASEPATH'))    exit('No direct script access allowed');include_once APPPATH . "libraries/core/crmcontroller.php";class Warehouse extends Crmcontroller{    public function __construct()    {	parent::__construct();	$this->lang->load('warehouse');	$this->load->model('warehouse_model');    }    public function _remap($m_Name)    {	switch ($m_Name)	{	    case 'create': $this->create();		break;	    case 'edit': $this->edit();		break;	    case 'details': $this->details();		break;	    case 'remove': $this->remove();		break;	    case 'sort': $this->sort();		break;	    default: $this->index();	}    }    public function journal()    {	$data = array();	$data['title'] = lang('WAREHOUSE_TITLE');	$data['orid'] = $this->get_orid();	$data['sort'] = $this->get_session('sort');	$data['find'] = $this->find();	$data['fields']['rid'] = array('label' => lang('ID'), 'colwidth' => '5%', 'sort' => TRUE);	$data['fields']['id'] = array('label' => lang('ID_WAREHOUSE'), 'colwidth' => '5%', 'sort' => TRUE);	$data['fields']['name'] = array('label' => lang('NAME'), 'colwidth' => '40%', 'sort' => TRUE);	$data['fields']['descr'] = array('label' => lang('DESCR'), 'colwidth' => '40%', 'sort' => TRUE);	$data['tools'] = $this->get_tools();	$data['ds'] = $this->warehouse_model->get_ds();	$data['paging'] = $this->get_paging($this->warehouse_model->get_calc_rows());	return $this->load->view('standart/grid', $data, TRUE);    }    private function create()    {	$data = array();	$this->form_validation->set_rules('name', lang('NAME'), 'required|trim|callback_check_unique_name');	$this->form_validation->set_rules('descr', lang('DESCR'), 'trim|max_length[512]');	$data['title'] = lang('WAREHOUSE_TITLE_CREATE');	$data['orid'] = $this->get_orid();	$data['success'] = null;	if ($this->form_validation->run() === TRUE)	{	    $rid = $this->warehouse_model->create_record();	    if ($rid)	    {		$this->session->set_flashdata('success', TRUE);		redirect(get_currcontroller() . "/edit/$rid", 'refresh');		return;	    }	    else		$data['success'] = FALSE;	}	$data['content'] = $this->load->view('warehouse/create', $data, TRUE);	return $this->load->view('layouts/main_layout', $data);    }    private function edit()    {	$rid = (int) $this->uri->segment(3);	if (!$rid)	    show_404();	$data = array();	$this->form_validation->set_rules('_countries_rid', lang('COUNTRY'), 'required|trim');	$this->form_validation->set_rules('city_name', lang('NAME'), 'required|trim|callback_check_unique_name');	$this->form_validation->set_rules('descr', lang('DESCR'), 'trim|max_length[512]');	$this->form_validation->set_rules('archive', lang('ARCHIVE'), 'trim');	$data['title'] = lang('CITIES_TITLE_EDIT');	$data['rid'] = $rid;	$data['orid'] = $this->get_orid();	$data['ds'] = $this->cities_model->get_edit($rid);	$data['success'] = $this->session->flashdata('success') ? $this->session->flashdata('success') : null;	if (!$data['ds'])	    show_404();	if ($this->form_validation->run() === TRUE)	{	    if ($this->cities_model->update_record())		$data['success'] = TRUE;	    else		$data['success'] = FALSE;	    $data['ds'] = $this->cities_model->get_edit($rid);	}	$data['content'] = $this->load->view('cities/edit', $data, TRUE);	return $this->load->view('layouts/main_layout', $data);    }    private function details()    {	$rid = (int) $this->uri->segment(3);	if (!$rid)	    show_404();	$data = array();	$data['title'] = lang('CITIES_TITLE_DETAILS');	$data['rid'] = $rid;	$data['orid'] = $this->get_orid();	$data['ds'] = $this->cities_model->get_edit($rid);	if (!$data['ds'])	    show_404();	$data['content'] = $this->load->view('cities/details', $data, TRUE);	return $this->load->view('layouts/main_layout', $data);    }    private function find()    {	$data['orid'] = $this->get_orid();	$this->form_validation->set_rules('name', lang('NAME'), 'trim');	if ($this->form_validation->run() == TRUE)	{	    $search_rule = array();	    if ($this->input->post('name'))		$search_rule['_warehouse.name'] = $this->input->post('name');	    $this->set_searchrule($search_rule);	}	$data['search'] = $this->get_session('searchrule');	return $this->load->view('warehouse/find', $data, TRUE);    }    private function move()    {	$rid = (int) $this->uri->segment(3);	if (!$rid)	    show_404();	$data = array();	$this->form_validation->set_rules('_employeers_rid', lang('NEW_OWNER'), 'required');	$data['title'] = lang('CITIES_TITLE_MOVE');	$data['rid'] = $rid;	$data['orid'] = $this->get_orid();	$data['ds'] = $this->cities_model->get_edit($rid);	$data['success'] = $this->session->flashdata('success') ? $this->session->flashdata('success') : null;	if (!$data['ds'])	    show_404();	if ($this->form_validation->run() === TRUE)	{	    if ($this->cities_model->move_record())		$data['success'] = TRUE;	    else		$data['success'] = FALSE;	    $data['ds'] = $this->cities_model->get_edit($rid);	}	$data['content'] = $this->load->view('cities/move', $data, TRUE);	return $this->load->view('layouts/main_layout', $data);    }    private function vcreate()    {	$data = array();	$this->form_validation->set_rules('_countries_rid', lang('COUNTRY'), 'required|trim');	$this->form_validation->set_rules('city_name', lang('NAME'), 'required|trim|callback_check_unique_name');	$this->form_validation->set_rules('descr', lang('DESCR'), 'trim|max_length[512]');	$this->form_validation->set_rules('archive', lang('ARCHIVE'), 'trim');	$data['title'] = lang('CITIES_TITLE_CREATE');	$data['orid'] = $this->get_orid();	$data['success'] = null;	if ($this->form_validation->run() === TRUE)	{	    $rid = $this->cities_model->create_record();	    if ($rid)	    {		$this->session->set_flashdata('success', TRUE);		redirect(get_currcontroller() . "/vedit/$rid", 'refresh');		return;	    }	    else		$data['success'] = FALSE;	}	$data['content'] = $this->load->view('cities/vcreate', $data, TRUE);	return $this->load->view('layouts/valuepicker_layout', $data);    }    public function vjournal()    {	$data = array();	$data['title'] = lang('CITIES_TITLE');	$data['orid'] = $this->get_orid();	$data['sort'] = $this->get_session('sort');	$data['find'] = $this->vfind();	$data['fields']['rid'] = array('label' => 'ID', 'colwidth' => '5%', 'sort' => TRUE);	$data['fields']['city_name'] = array('label' => lang('NAME'), 'colwidth' => '40%', 'sort' => TRUE);	$data['fields']['country_name'] = array('label' => lang('COUNTRY'), 'colwidth' => '25%', 'sort' => TRUE);	$data['fields']['archive'] = array('label' => lang('ARCHIVE'), 'colwidth' => '10%', 'sort' => TRUE, 'type' => 'yes_no');	$data['fields']['modifyDT'] = array('label' => lang('MODIFYDT'), 'colwidth' => '20%', 'sort' => TRUE);	$data['jtp'] = $this->jtp;	$data['tools'] = $this->get_tools();	$data['ds'] = $this->cities_model->get_ds();	$data['paging'] = $this->get_paging($this->cities_model->get_calc_rows(), TRUE);	$content = $this->load->view('standart/vgrid', $data, TRUE);	$this->load->view('layouts/valuepicker_layout', array('content' => $content));	return;    }    private function vedit()    {	$rid = (int) $this->uri->segment(3);	if (!$rid)	    show_404();	$data = array();	$this->form_validation->set_rules('_countries_rid', lang('COUNTRY'), 'required|trim');	$this->form_validation->set_rules('city_name', lang('NAME'), 'required|trim|callback_check_unique_name');	$this->form_validation->set_rules('descr', lang('DESCR'), 'trim|max_length[512]');	$this->form_validation->set_rules('archive', lang('ARCHIVE'), 'trim');	$data['title'] = lang('CITIES_TITLE_EDIT');	$data['rid'] = $rid;	$data['orid'] = $this->get_orid();	$data['jtp'] = $this->jtp;	$data['ds'] = $this->cities_model->get_edit($rid);	$data['success'] = $this->session->flashdata('success') ? $this->session->flashdata('success') : null;	if (!$data['ds'])	    show_404();	if ($this->form_validation->run() === TRUE)	{	    if ($this->cities_model->update_record())		$data['success'] = TRUE;	    else		$data['success'] = FALSE;	    $data['ds'] = $this->cities_model->get_edit($rid);	}	$data['content'] = $this->load->view('cities/vedit', $data, TRUE);	return $this->load->view('layouts/valuepicker_layout', $data);    }    private function vdetails()    {	$rid = (int) $this->uri->segment(3);	if (!$rid)	    show_404();	$data = array();	$data['title'] = lang('CITIES_TITLE_DETAILS');	$data['rid'] = $rid;	$data['orid'] = $this->get_orid();	$data['jtp'] = $this->jtp;	$data['ds'] = $this->cities_model->get_edit($rid);	if (!$data['ds'])	    show_404();	$data['content'] = $this->load->view('cities/vdetails', $data, TRUE);	return $this->load->view('layouts/valuepicker_layout', $data);    }    private function vfind()    {	$data['orid'] = $this->get_orid();	$this->form_validation->set_rules('city_name', lang('NAME'), 'trim');	if ($this->form_validation->run() == TRUE)	{	    $search_rule = array();	    if ($this->input->post('city_name'))		$search_rule['_cities.city_name'] = $this->input->post('city_name');	    if ($this->input->post('_countries_rid'))		$search_rule['_cities._countries_rid'] = $this->input->post('_countries_rid');	    $this->set_searchrule($search_rule);	}	$data['search'] = $this->get_session('searchrule');	return $this->load->view('cities/vfind', $data, TRUE);    }    private function vmove()    {	$rid = (int) $this->uri->segment(3);	if (!$rid)	    show_404();	$data = array();	$this->form_validation->set_rules('_employeers_rid', lang('NEW_OWNER'), 'required');	$data['title'] = lang('CITIES_TITLE_MOVE');	$data['rid'] = $rid;	$data['orid'] = $this->get_orid();	$data['ds'] = $this->cities_model->get_edit($rid);	$data['success'] = $this->session->flashdata('success') ? $this->session->flashdata('success') : null;	if (!$data['ds'])	    show_404();	if ($this->form_validation->run() === TRUE)	{	    if ($this->cities_model->move_record())		$data['success'] = TRUE;	    else		$data['success'] = FALSE;	    $data['ds'] = $this->cities_model->get_edit($rid);	}	$data['content'] = $this->load->view('cities/vmove', $data, TRUE);	return $this->load->view('layouts/valuepicker_layout', $data);    }    public function check_unique_name($code)    {	$rid = $this->input->post('rid');	if ($this->cities_model->check_unique($code, 'name', $rid))	{	    $this->form_validation->set_message('check_unique_name', lang('CITIES_NAME_NOTUNIQUE'));	    return FALSE;	}	return TRUE;    }}?>