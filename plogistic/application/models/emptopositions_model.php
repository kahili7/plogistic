<?if(!DEFINED('BASEPATH')) exit('No direct script access allowed');include_once APPPATH."libraries/core/objmodel.php";class Emptopositions_model extends Objmodel{	public function __construct()	{		parent::__construct();	}	public function get_ds()	{		$this->db->select('SQL_CALC_FOUND_ROWS _emp_to_positions_headers.rid as rid, 							DATE_FORMAT(_emp_to_positions_headers.date_obj, \'%d.%m.%Y\') as date_obj, 							_emp_to_positions_rows._employeers_rid as _employeers_rid,							_emp_to_positions_rows._positions_rid as _positions_rid,							DATE_FORMAT(_emp_to_positions_rows.bdate, \'%d.%m.%Y\') as bdate,							CONCAT(_employeers.l_name,\' \',_employeers.f_name) as employeer_name,							_positions.name as position_name,							_filials.name as filial_name,							DATE_FORMAT(_emp_to_positions_headers.modifyDT,  \'%d.%m.%Y\') as modifyDT, 							_emp_to_positions_headers.descr as descr, _emp_to_positions_headers.archive', FALSE);		$this->db->from('_emp_to_positions_headers');		$this->db->join('_emp_to_positions_rows', '_emp_to_positions_rows._emp_to_positions_headers_rid = _emp_to_positions_headers.rid');		$this->db->join('_employeers', '_emp_to_positions_rows._employeers_rid = _employeers.rid');		$this->db->join('_filials', '_emp_to_positions_rows._filials_rid = _filials.rid', 'LEFT');		$this->db->join('_positions', '_emp_to_positions_rows._positions_rid = _positions.rid');		$this->db->group_by('_emp_to_positions_headers.rid');				if(($searchRule = element('like', $this->ki->get_session('searchrule'), null))) $this->db->like($searchRule);		if(($searchRule = element('where', $this->ki->get_session('searchrule'), null))) $this->db->where($searchRule);		if(($sort = $this->ki->get_session('sort'))) $this->db->orderby($sort['c'], $sort['r']);				$this->db->limit($this->ki->config->item('crm_grid_limit'), element('p', $this->ki->a_uri_assoc, null));		$query = $this->db_get('_emp_to_positions_headers');		return $query->num_rows() ? $query->result() : array();	}	public function get_edit($rid)	{		$this->db->select('_emp_to_positions_headers.rid as rid, 							DATE_FORMAT(_emp_to_positions_headers.date_obj, \'%d.%m.%Y\') as date_obj,							_emp_to_positions_rows._employeers_rid as _employeers_rid,							_emp_to_positions_rows._positions_rid as _positions_rid,							DATE_FORMAT(_emp_to_positions_rows.bdate, \'%d.%m.%Y\') as bdate,							CONCAT(_employeers.f_name,\' \',_employeers.s_name,\' \',_employeers.l_name) as employeer_name,							_positions.name as position_name,							_emp_to_positions_rows._filials_rid,							_emp_to_positions_headers.descr as descr, _emp_to_positions_headers.archive', FALSE);		$this->db->from('_emp_to_positions_headers');		$this->db->join('_emp_to_positions_rows', '_emp_to_positions_rows._emp_to_positions_headers_rid = _emp_to_positions_headers.rid');		$this->db->join('_employeers', '_emp_to_positions_rows._employeers_rid = _employeers.rid');		$this->db->join('_positions', '_emp_to_positions_rows._positions_rid = _positions.rid');		$this->db->where(array('_emp_to_positions_headers.rid' => $rid));		$query = $this->db_get('_emp_to_positions_headers');		return $query->num_rows() ? $query->row() : FALSE;	}	public function create_record()	{		$ins_h = array('date_obj' => date('Y-m-d', strtotime($this->ki->input->post('date_obj'))),								'descr' => $this->ki->input->post('descr'),								'archive' => $this->ki->input->post('archive'),								'owner_users_rid' => get_curr_urid(),								'modifier_users_rid' => get_curr_urid());		$this->db->set('createDT', 'now()', FALSE);		$this->db->set('modifyDT', 'now()', FALSE);		$this->db->insert('_emp_to_positions_headers', $ins_h);				$ins_r = array('_emp_to_positions_headers_rid' => $this->db->insert_id(),							'_employeers_rid' => $this->ki->input->post('_employeers_rid'),							'_positions_rid' => $this->ki->input->post('_positions_rid'),							'_filials_rid' => $this->ki->input->post('_filials_rid'),							'bdate' => date('Y-m-d', strtotime($this->ki->input->post('bdate'))),							'owner_users_rid' => get_curr_urid(),							'modifier_users_rid' => get_curr_urid());		$this->db->set('createDT', 'now()', FALSE);		$this->db->set('modifyDT', 'now()', FALSE);		$this->db->insert('_emp_to_positions_rows', $ins_r);				if($this->db->trans_status() === FALSE)		{	   		$this->db->trans_rollback();    		return FALSE;		}		else		{    		$this->db->trans_commit();    		return $obj_rid;		}			}		public function update_record()	{		$update_h = array('date_obj' => date('Y-m-d', strtotime($this->ki->input->post('date_obj'))), 							'descr' => $this->ki->input->post('descr'),							'archive' => $this->ki->input->post('archive'),							'modifier_users_rid' => get_curr_urid());		$this->db->set('modifyDT', 'now()', FALSE);		$this->db->update('_emp_to_positions_headers', $update_h, array('_emp_to_positions_headers._objects_rid' => $this->ki->input->post('rid')));		$query = $this->db->getwhere('_emp_to_positions_headers', array('_emp_to_positions_headers._objects_rid' => $this->ki->input->post('rid')));				if(!$query->num_rows()) 		{			$this->db->trans_rollback();    		return FALSE;		}				$row = $query->row();		$update_r = array('_employeers_rid' => $this->ki->input->post('_employeers_rid'),							'_positions_rid' => $this->ki->input->post('_positions_rid'),							'_filials_rid' => $this->ki->input->post('_filials_rid'),							'bdate' => date('Y-m-d', strtotime($this->ki->input->post('bdate'))),							'modifier_users_rid' => get_curr_urid());		$this->db->set('modifyDT', 'now()', FALSE);				$this->db->update('_emp_to_positions_rows', $update_r, array('_emp_to_positions_rows._emp_to_positions_headers_rid' => $row->rid));				if ($this->db->trans_status() === FALSE)		{    		$this->db->trans_rollback();    		return FALSE;		}		else		{    		$this->db->trans_commit();    		return $this->ki->input->post('rid');		}			}		public function move_record()	{		$update_obj = array('owner_users_rid' => get_urid_byemprid($this->ki->input->post('_employeers_rid')));		$this->db->set('modifyDT', 'now()', FALSE);		$this->db->trans_begin();		$this->db->update('_emp_to_positions_headers', $update_obj, array('_emp_to_positions_headers.rid'=>$this->ki->input->post('rid')));				if($this->db->trans_status() === FALSE)		{    		$this->db->trans_rollback();    		return FALSE;		}		else		{    		$this->db->trans_commit();    		return $this->ki->input->post('rid');		}			}}?>